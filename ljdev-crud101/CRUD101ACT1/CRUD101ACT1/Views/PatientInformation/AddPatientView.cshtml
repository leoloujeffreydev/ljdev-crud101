@*model C101_Entities.PatientInformationEntity*@
@*model IEnumerable<C101_Entities.DrugEntity> *@
@using C101_Entities
@model C101_Entities.PatientAndDrugsViewModel

@*JQUERY FOR SIMULTANEOUS DISPLAY VALUE FROM INPUT TEXTBOX TO OUTPUT TEXTBOX*@

<head>
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
 

    <script>
        $(document).ready(function () {
            $('#txtPName').on('input', function () { //addPatientForm
                var inputText = $(this).val(); //variable
                $('#hiddenTxtPName').val(inputText); //APVHiddenTextboxesForm
            });
        });

        $(document).ready(function () {
            $('#ddlDrugName').on('change', function () { //addPatientForm
                var selectedText = $(this).find('option:selected').text();  //variable
                $('#hiddenTxtDName').val(selectedText); //APVHiddenTextboxesForm
            });
        });

        $(document).ready(function () {
            $('#ddlDrugDosage').on('change', function () { //addPatientForm
                var selectedText = $(this).find('option:selected').text();  //variable
                $('#hiddenTxtDos').val(selectedText); //APVHiddenTextboxesForm
            });
        });
    </script>
</head>
@{
    //ViewBag.Title = "CREATE NEW RECORD";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*VIEW BAG MESSAGE ALERT*@
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <script>
        alert('@ViewBag.Message');
    </script>
}

@* CSS for highlighting invalid fields *@
<style>
    .highlight-error {
        border: 2px solid red;
    }
</style>

@* HTML markup for the modal *@
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">"Modal Title"</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="myModalPar">This is a simple modal dialog. You can add any content here.</p>
            </div>
            <div class="modal-footer">
                <button id="modalBtnCancel" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="modalBtnSave" type="submit" class="btn btn-primary" data-dismiss="modal">Confirm</button>
            </div>
        </div>
    </div>
</div>


<body>
    @*@using (Html.BeginForm("ActionNameInController", "ViewsFolderName", FormMethod.Post, new { id = "editPatientForm" }))*@
    @using (Html.BeginForm("AddPatientView", "PatientInformation", FormMethod.Post, new { id = "addPatientForm" }))
    {

        @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <h4>ADD NEW RECORD</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div id="lblPatientId" class="form-group">
            @Html.LabelFor(model => model.PATIENTID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div id="txtPatientId" class="col-md-10">
                @Html.EditorFor(model => model.PATIENTID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PATIENTID, "", new { @class = "text-danger" })
            </div>
        </div>*@

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.PATIENTINFORMATIONVM.PATIENTNAME, htmlAttributes: new { @class = "control-label col-md-2", id = "lblPname" })
                @Html.EditorFor(model => model.PATIENTINFORMATIONVM.PATIENTNAME, new { htmlAttributes = new { @class = "form-control", id = "txtPName", title = "Enter Here", @Value = ViewBag.PName } })
                @Html.ValidationMessageFor(model => model.PATIENTINFORMATIONVM.PATIENTNAME, "", new { @class = "text-danger", id = "valMesPName" })
            </div>
        </div>

        @*Html.EditorFor(model => model.PatientInformation.DRUG, new { htmlAttributes = new { @class = "form-control", id = "txtDrug", title = "Enter Here" } })
        Html.DropDownList("SelectedDrug", new SelectList(Model, "DRUGID", "DRUGNAME"), "Select a Drug")*@
        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.PATIENTINFORMATIONVM.DRUG, htmlAttributes: new { @class = "control-label col-md-2", id = "lblDname" })
                <!--NOTE: ADDING DROPDOWNLIST ATTRIBUTE IS DIFFERENT FROM TEXTBOXES AND LABELS-->
                @Html.DropDownListFor(model => model.SelectedDrugName, new SelectList(Model.DRUGVM, "DRUGNAME", "DRUGNAME", ViewBag.DName), "Select Drug", new { @class = "form-control", id = "ddlDrugName", title = "Enter Here" })
                @*SelectList(Model.DRUGVM, "DRUGNAME", "DRUGNAME", ViewBag.DName) = DRUDNAME1 = selected value, DRUGNAME2 = display name, ViewBag = passed as the selected value*@
                @Html.EditorFor(model => model.PATIENTINFORMATIONVM.DRUG, new { htmlAttributes = new { @class = "form-control", id = "hiddenTxtDrug", title = "Enter Here" } }) @*, style = "display:none;"*@
                @Html.ValidationMessageFor(model => model.PATIENTINFORMATIONVM.DRUG, "", new { @class = "text-danger", id = "valMesDrug" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.LabelFor(model => model.PATIENTINFORMATIONVM.DOSAGE, htmlAttributes: new { @class = "control-label col-md-2", id = "lblDos" })
                <!--NOTE: ADDING DROPDOWNLIST ATTRIBUTE IS DIFFERENT FROM TEXTBOXES AND LABELS-->
                @Html.DropDownListFor(model => model.SelectedDrugDosage, new SelectList(Model.DISTINCTDOSAGEVM, "DOSAGE", "DOSAGE", ViewBag.Dosage), "Select Dosage", new { @class = "form-control", id = "ddlDrugDosage", title = "Enter Here" })
                @Html.EditorFor(model => model.PATIENTINFORMATIONVM.DOSAGE, new { htmlAttributes = new { @class = "form-control", id = "hiddenTxtDosage", title = "Enter Here" } }) @*, style = "display:none;"*@
                @Html.ValidationMessageFor(model => model.PATIENTINFORMATIONVM.DOSAGE, "", new { @class = "text-danger", id = "valMesDosage" })
            </div>
        </div>

        <input type="text" class="form-control" id="apreturnTxtPName" name="apretpName"> 
        <input type="text" class="form-control" id="apreturnTxtDName" name="apretdName">
        <input type="text" class="form-control" id="apreturnTxtDosage" name="apretDosage">

        @*<div class="form-group">
            @Html.LabelFor(model => model.DATEMODIFIED, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DATEMODIFIED, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DATEMODIFIED, "", new { @class = "text-danger" })
            </div>
        </div>*@





        @*<div class="form-group">
            <div id="btnTry" class="col-md-offset-2 col-md-10">
                <input type="submit" value="try" class="btn btn-default" />
            </div>
        </div>*@

    </div>

        @*<div class="form-group">
                <div id="btnSubmit" class="col-md-offset-2 col-md-10">
                    <input type="button" value="Create" class="btn btn-default" />
                </div>
            </div>

            <script src="~/Scripts/AddPatient/AddPatient.js"></script>*@


    }


    @using (Html.BeginForm("APVHiddenTextboxes", "PatientInformation", FormMethod.Post, new { id = "APVHiddenTextboxesForm" }))
    {

        <input type="text" id="hiddenTxtStatus" name="statusss" value="@ViewBag.Result"> @*Add a hidden input for status*@
        <input type="text" id="hiddenTxtStatusXXX" name="statusssss" value=1> @*Add a hidden input for status*@
        @*@Html.EditorFor(model => model.PATIENTINFORMATIONVM.PATIENTNAME, new { htmlAttributes = new { @class = "form-control", id = "outputBox", title = "Enter Here" } })*@
        <input type="text" class="form-control" id="hiddenTxtPName" name="pName">
        <input type="text" class="form-control" id="hiddenTxtDName" name="dName">
        <input type="text" class="form-control" id="hiddenTxtDos" name="dosage">
        <input type="text" class="form-control" id="hiddenTxtDate" name="dtMod" value="@DateTime.Now.ToString("yyyy-MM-dd")" readonly />

        <input type="text" class="form-control" id="returnTxtPName" name="retpName" value="@ViewBag.PName"> //this is just to double check if values from controller are fetched and displayed in the view (values are directly displayed in the main input txtbox/ddl)
        <input type="text" class="form-control" id="returnTxtDName" name="retdName" value="@ViewBag.DName"> //this is just to double check if values from controller are fetched and displayed in the view (values are directly displayed in the main input txtbox/ddl)
        <input type="text" class="form-control" id="returnTxtDosage" name="retDosage" value="@ViewBag.Dosage"> //this is just to double check if values from controller are fetched and displayed in the view (values are directly displayed in the main input txtbox/ddl)


        <table class="table">
            <tr>
                <th>
                    PATIENT ID
                </th>
                <th>
                    PATIENT NAME
                </th>
                <th>
                    DRUG
                </th>
                <th>
                    DOSAGE
                </th>
                <th>
                    DATE MODIFIED
                </th>
                <th></th>
            </tr>

            @foreach (var item in Model.PATIENTINFOVM)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.PATIENTID)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.PATIENTNAME)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DRUG)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DOSAGE)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DATEONLY)
                    </td>
                </tr>
            }
        </table>



    }

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            @*<input type="submit" value="Validate" class="btn btn-default" />*@ @*used previously, not verstaile enough*@
            <button id="btnValidate" type="button" class="btn btn-default">Check Drug Administration</button>
            <button id="btnSubmit" type="button" class="btn btn-default">Submit</button>
        </div>
    </div>


    <script src="~/Scripts/AddPatient/UniqueDrug.js"></script>
    <script src="~/Scripts/AddPatient/AddPatient.js"></script>
    @*<script src="~/Scripts/AddPatient/APVMain.js"></script>*@
    @*<script src="~/Scripts/AddPatient/APVMain.js"></script>*@ <!-- Your main script where the button click event is handled -->


</body>



<div>
    @Html.ActionLink("Back to List", "PatientInformationView")
</div>


