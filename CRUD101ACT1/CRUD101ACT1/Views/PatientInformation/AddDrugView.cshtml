@*model C101_Entities.PatientInformationEntity*@
@model C101_Entities.DrugEntity
@using C101_Entities
@*model C101_Entities.PatientAndDrugsViewModel*@

@{
    //ViewBag.Title = "CREATE NEW RECORD";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*FLATPICKR (CALENDAR) CSS and JavaScript files links *@

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.3/css/all.min.css">
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>

@*VIEW BAG MESSAGE ALERT*@

@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <script>
        alert('@ViewBag.Message');
    </script>
}

@* CSS for highlighting invalid fields *@
<style>
    .highlight-error {
        border: 2px solid red;
    }
</style>

@* HTML markup for the modal *@
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">"Modal Title"</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="myModalPar">This is a simple modal dialog. You can add any content here.</p>
            </div>
            <div class="modal-footer">
                <button id="modalBtnCancel" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="modalBtnSave" type="submit" class="btn btn-primary" data-dismiss="modal">Confirm</button>
            </div>
        </div>
    </div>
</div>


@*@using (Html.BeginForm("ActionNameInController", "ViewsFolderName", FormMethod.Post, new { id = "editPatientForm" }))*@
@using (Html.BeginForm("AddDrugView", "PatientInformation", FormMethod.Post, new { id = "addDrugForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>ADD NEW RECORD</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div id="lblPatientId" class="form-group">
                @Html.LabelFor(model => model.PATIENTID, htmlAttributes: new { @class = "control-label col-md-2" })
                <div id="txtPatientId" class="col-md-10">
                    @Html.EditorFor(model => model.PATIENTID, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PATIENTID, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.DRUGNAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DRUGNAME, new { htmlAttributes = new { @class = "form-control", id = "txtDrugName", title = "Enter Here" } })
                @Html.ValidationMessageFor(model => model.DRUGNAME, "", new { @class = "text-danger", id = "valMesDrugName" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.EXPIRATIONDATE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.EXPIRATIONDATE, new { htmlAttributes = new { @class = "form-control", @readonly = "true", id = "txtExpDate", title = "Enter Here", type = "text" } })
                <button id="open-datepicker-btn" type="button"><i class="fas fa-calendar-alt"></i></button>
                @Html.ValidationMessageFor(model => model.DRUGNAME, "", new { @class = "text-danger", id = "valMesExpDate" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.DOSAGE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOSAGE, new { htmlAttributes = new { @class = "form-control", id = "txtDrugDosage", title = "Enter Here" } })
                @Html.ValidationMessageFor(model => model.DRUGNAME, "", new { @class = "text-danger", id = "valMesDrugDosage" })
            </div>
        </div>


        <div class="form-group">
            <div id="btnSubmit" class="col-md-offset-2 col-md-10">
                <input type="button" value="Create" class="btn btn-default" />
            </div>
        </div>

        <div class="form-group">
            <div id="btnTry" class="col-md-offset-2 col-md-10">
                <input type="submit" value="try" class="btn btn-default" />
            </div>
        </div>

    </div>

    //FLATPICKR (CALENDAR: JAVASCRIPT - you can customize this calendar)
    @*<script>
                flatpickr('#datepicker', {
        dateFormat: 'Y-m-d',
                    // Add more options as needed
                });
            </script>*@
    <script>
        const datepicker = flatpickr("#txtExpDate", {
            dateFormat: "d-M-Y",//"Y-m-d",
            minDate: "today",
            //maxDate: new Date().fp_incr(30), // 30 days from today
            defaultDate: "today", // initial date when datepickr is opened
            enableTime: true, //Allows users to select time in addition to dates.
            //disable: [
            //   { from: "2024-06-01", to: "2024-06-10" }, // Disable a date range
            //    "2024-07-01" // Disable a specific date
            //],
            clickOpens: false,
            locale: {
                firstDayOfWeek: 1, // Start week on Monday
                weekdays: {
                    shorthand: ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"],
                    longhand: ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"]
                },
                months: {
                    shorthand: ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"],
                    longhand: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"]
                }
            },
            onChange: function (selectedDates, dateStr, instance) {
                console.log("Selected date: " + dateStr);
            }

        });

        document.getElementById("open-datepicker-btn").addEventListener("click", function () {
            datepicker.open();

        });
    </script>




    @*<script>
            $(document).ready(function () {
                $('#datepicker').datepicker({
                });
            });
        </script>*@

    <script src="~/Scripts/AddDrug/AddDrug.js"></script>

}


<div>
    @Html.ActionLink("Back to List", "DrugView")
</div>


