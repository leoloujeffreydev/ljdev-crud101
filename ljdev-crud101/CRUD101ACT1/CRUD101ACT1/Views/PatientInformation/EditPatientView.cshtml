@model C101_Entities.PatientInformationEntity

@{
    //ViewBag.Title = "EditPatientView";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*VIEW BAG MESSAGE ALERT*@
@if (!string.IsNullOrEmpty(ViewBag.Message))
{
    <script>
        alert('@ViewBag.Message');
    </script>
}

@* CSS for highlighting invalid fields *@
<style>
    .highlight-error {
        border: 2px solid red;
    }
</style>

@* HTML markup for the modal *@
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">"Modal Title"</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p id="myModalPar">This is a simple modal dialog. You can add any content here.</p>
            </div>
            <div class="modal-footer">
                <button id="modalBtnCancel" type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button id="modalBtnSave" type="submit" class="btn btn-primary" data-dismiss="modal">Confirm</button>
            </div>
        </div>
    </div>
</div>

@*@using (Html.BeginForm("ActionNameInController", "ViewsFolderName", FormMethod.Post, new { id = "editPatientForm" }))*@
@using (Html.BeginForm("EditPatientView", "PatientInformation", FormMethod.Post, new { id = "editPatientForm" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>UPDATE PATIENT INFO</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.HiddenFor(model => model.PATIENTID, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.HiddenFor(model => model.PATIENTID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PATIENTID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div id="lblPatientName" class="form-group">
            @Html.LabelFor(model => model.PATIENTNAME, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PATIENTNAME, new { htmlAttributes = new { @class = "form-control", id = "txtPName", autofocus = "autofocus", title = "Enter Here" } })
                @Html.ValidationMessageFor(model => model.PATIENTNAME, "", new { @class = "text-danger", id = "valMesPName" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DRUG, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DRUG, new { htmlAttributes = new { @class = "form-control", id = "txtDrug", title = "Enter Here" } })
                @Html.ValidationMessageFor(model => model.DRUG, "", new { @class = "text-danger", id = "valMesDrug" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DOSAGE, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DOSAGE, new { htmlAttributes = new { @class = "form-control", id = "txtDosage", title = "Enter Here" } })
                @Html.ValidationMessageFor(model => model.DOSAGE, "", new { @class = "text-danger", id = "valMesDosage" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.DATEMODIFIED, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DATEMODIFIED, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DATEMODIFIED, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div id="btnSubmit" class="col-md-offset-2 col-md-10">
                <input type="button" value="Save" class="btn btn-default" />
            </div>
        </div>

    </div>

    <script src="~/Scripts/UpdatePatient/UpdatePatient.js"></script>
}

<div>
    @Html.ActionLink("Back to List", "PatientInformationView")
</div>
